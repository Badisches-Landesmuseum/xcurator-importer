/**
 *  Version Plugin for Semantic Versioning
 *  
 *  Source: https://github.com/ilovemilk/semver-git-plugin
 */

buildscript {
    repositories {
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath "io.wusa:semver-git-plugin:2.3.7"
    }
}

apply plugin: io.wusa.SemverGitPlugin

semver {
    tagType = 'LIGHTWEIGHT'
    snapshotSuffix = ""
    dirtyMarker = "dirty" // show uncommitted files
    initialVersion = "0.0.1"
//    def info = semver.info
    branches { // list of branch configurations
        branch {
            regex = "release/.*"
            incrementer = "NO_VERSION_INCREMENTER"
            formatter = { "${semver.info.version.major}.${semver.info.version.minor}.${semver.info.version.patch}-rc.${semver.info.count}" }
        }
        branch {
            regex = "master"
            incrementer = "NO_VERSION_INCREMENTER"
            formatter = { "${semver.info.version.major}.${semver.info.version.minor}.${semver.info.version.patch}" }
        }
        branch {
            regex = "develop" // DEFAULT: [develop, feature, etc.]
            incrementer = "NO_VERSION_INCREMENTER"
            formatter = { "${semver.info.version.major}.${semver.info.version.minor}.${semver.info.version.patch}-dev.${semver.info.count}" }
        }
        branch {
            regex = ".+" // regex for the branch you want to configure, put this one last
            incrementer = "NO_VERSION_INCREMENTER"
            formatter = { "${semver.info.version.major}.${semver.info.version.minor}.${semver.info.version.patch}-build.${semver.info.count}.sha.${semver.info.shortCommit}" }
        }
    }
}

task bumpPatch(type:Exec) {
    group 'versioning'
    description 'Increment the project patch version using Git Tag'
    def version = semver.info.version
    commandLine 'git', 'tag', "${version.major}.${version.minor}.${version.patch + 1}"
}

task bumpMinor(type:Exec) {
    group 'versioning'
    description 'Increment the project minor version using Git Tag'
    def version = semver.info.version
    commandLine 'git', 'tag', "${version.major}.${version.minor+1}.0"
}

task bumpMajor(type:Exec) {
    group 'versioning'
    description 'Increment the project major version using Git Tag'
    def version = semver.info.version
    commandLine 'git', 'tag', "${version.major+1}.0.0"
}

task pushTags(type:Exec){
    group 'versioning'
    description 'Pushing version Tags to the remote git repository'
    commandLine 'git', 'push', '--tags'
    doLast {
        println "New version: $semver.info.toString()"
    }
}

bumpPatch.finalizedBy pushTags
bumpMinor.finalizedBy pushTags
bumpMajor.finalizedBy pushTags

allprojects {
    version = System.getenv("CI_APP_VERSION") ?: semver.info.toString() // allow CI to override version (to standartize versioning scheme)
}
