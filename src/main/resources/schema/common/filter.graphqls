"Operator for _textInput filter"
input StringSearchFilter {
    contains: String
}

input IDFilter {
    equals: ID
    in: [ID!]
    notIn: [ID!]
    not: NestedStringFilter
}

input NestedIDFilter {
    equals: ID
    in: [ID!]
    notIn: [ID!]
    not: NestedIDFilter
}

"Operator to filter String properties"
input StringFilter {
    equals: String
    in: [String!]
    notIn: [String!]
    lt: String
    lte: String
    gt: String
    gte: String
    contains: String
    startsWith: String
    endsWith: String
    not: NestedStringFilter
}

input NestedStringFilter {
    equals: String
    in: [String!]
    notIn: [String!]
    lt: String
    lte: String
    gt: String
    gte: String
    contains: String
    startsWith: String
    endsWith: String
    not: NestedStringFilter
}

input FloatNullableFilter {
    equals: Float
    in: [Float!]
    notIn: [Float!]
    lt: Float
    lte: Float
    gt: Float
    gte: Float
    not: NestedFloatNullableFilter
}

input NestedFloatNullableFilter {
    equals: Float
    in: [Float!]
    notIn: [Float!]
    lt: Float
    lte: Float
    gt: Float
    gte: Float
    not: NestedFloatNullableFilter
}

input DateTimeFilter {
    equals: DateTime
    in: [DateTime!]
    notIn: [DateTime!]
    lt: DateTime
    lte: DateTime
    gt: DateTime
    gte: DateTime
    not: NestedDateTimeFilter
}

input NestedDateTimeFilter {
    equals: DateTime
    in: [DateTime!]
    notIn: [DateTime!]
    lt: DateTime
    lte: DateTime
    gt: DateTime
    gte: DateTime
    not: NestedDateTimeFilter
}

input BoolFilter {
    equals: Boolean
    not: NestedBoolFilter
}

input NestedBoolFilter {
    equals: Boolean
    not: NestedBoolFilter
}

input IntFilter {
    equals: Int
    in: [Int!]
    notIn: [Int!]
    lt: Int
    lte: Int
    gt: Int
    gte: Int
    not: NestedIntFilter
}

input NestedIntFilter {
    equals: Int
    in: [Int!]
    notIn: [Int!]
    lt: Int
    lte: Int
    gt: Int
    gte: Int
    not: NestedIntFilter
}

input URLFilter {
    equals: URL
    in: [URL!]
    notIn: [URL!]
    contains: URL
    startsWith: URL
    endsWith: URL
    not: NestedURLFilter
}

input NestedURLFilter {
    equals: URL
    in: [URL!]
    notIn: [URL!]
    contains: URL
    startsWith: URL
    endsWith: URL
}